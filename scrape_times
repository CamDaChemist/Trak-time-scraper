from selenium import webdriver
from bs4 import BeautifulSoup
import subprocess as sp
from selenium.webdriver.common.keys import Keys
import time
import pandas as pd
# create a new dataframe to store the information
df_output = pd.DataFrame(columns=['Episode', 'Collection Date', 'Receive Date', 'Register Date'])
df_input = pd.read_excel('C:/Users/cafra/Documents/Episode_number.xlsx')
episode_numbers = df_input['Episode number']
options = webdriver.ChromeOptions()
options.add_argument('--headless')
# create a new instance of Chrome webdriver
driver = webdriver.Chrome(chrome_options=options)

# navigate to the login page
driver.get("https://trakcarelabwebview.nhls.ac.za/trakcarelab/csp/system.Home.cls#/Component/web.EPVisitNumber.List?TUID=16&TUID=0&CONTEXT=W5&Dialog=1")

#wait 5 seconds for loading
time.sleep(2)
# find the username and password fields and enter the credentials
username_field = driver.find_element("id","SSUser_Logon_0-item-USERNAME")
username_field.send_keys("Username")
password_field = driver.find_element("id","SSUser_Logon_0-item-PASSWORD")
password_field.send_keys("Password")
password_field.send_keys(Keys.RETURN)
time.sleep(2)
for ep_num in episode_numbers:
    episode_field = driver.find_element("id", "web_DEBDebtor_FindList_0-item-EpisodeParam")
    episode_field.send_keys(ep_num)
    episode_field.send_keys(Keys.RETURN)
    time.sleep(1)
    try:
        collection_date = driver.find_element("id", "web_EPVisitNumber_List_0_0-row-0-item-CollectionDate")
        collection_time = driver.find_element("id", 'web_EPVisitNumber_List_0_0-row-0-item-CollectionTime')
        register_date = driver.find_element("id", 'web_EPVisitNumber_List_0_0-row-0-item-RegisterDate')
        register_time = driver.find_element("id",'web_EPVisitNumber_List_0_0-row-0-item-RegisterTime')
        receive_date = driver.find_element("id", 'web_EPVisitNumber_List_0_0-row-0-item-RegisterTime')
        receive_time = driver.find_element("id", 'web_EPVisitNumber_List_0_0-row-0-item-ReceiveTime') 
        col_date_text = collection_date.text
        col_time_text = collection_time.text
        register_date_text = register_date.text
        register_time_text = register_time.text
        receive_date_text = receive_date.text
        receive_time_text = receive_time.text
        data = {'Episode': [ep_num],'Collection Date': [col_date_text + " " +col_time_text], 'Receive Date': [receive_date_text + " " +receive_time_text], 'Register Date': [register_date_text + " " +register_time_text]}
        df_output = df_output.append(data, ignore_index=True)
    except:
        pass

# write the DataFrame to an Excel file
df_output.to_excel('output.xlsx', index=False)

